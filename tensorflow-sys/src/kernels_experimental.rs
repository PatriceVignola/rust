/* automatically generated by rust-bindgen 0.59.2 */

extern "C" {
    pub fn TF_AssignVariable(
        ctx: *mut TF_OpKernelContext,
        input_index: ::std::os::raw::c_int,
        value_index: ::std::os::raw::c_int,
        validate_shape: bool,
        copyFunc: ::std::option::Option<
            unsafe extern "C" fn(
                ctx: *mut TF_OpKernelContext,
                source: *mut TF_Tensor,
                dest: *mut TF_Tensor,
            ),
        >,
        status: *mut TF_Status,
    );
}
extern "C" {
    pub fn TF_AssignRefVariable(
        ctx: *mut TF_OpKernelContext,
        input_ref_index: ::std::os::raw::c_int,
        output_ref_index: ::std::os::raw::c_int,
        value_index: ::std::os::raw::c_int,
        use_locking: bool,
        validate_shape: bool,
        copyFunc: ::std::option::Option<
            unsafe extern "C" fn(
                ctx: *mut TF_OpKernelContext,
                source: *mut TF_Tensor,
                dest: *mut TF_Tensor,
            ),
        >,
        status: *mut TF_Status,
    );
}
extern "C" {
    pub fn TF_AssignUpdateVariable(
        ctx: *mut TF_OpKernelContext,
        input_index: ::std::os::raw::c_int,
        value_index: ::std::os::raw::c_int,
        Op: ::std::os::raw::c_int,
        isVariantType: ::std::os::raw::c_int,
        copyFunc: ::std::option::Option<
            unsafe extern "C" fn(
                ctx: *mut TF_OpKernelContext,
                source: *mut TF_Tensor,
                dest: *mut TF_Tensor,
            ),
        >,
        updateFunc: ::std::option::Option<
            unsafe extern "C" fn(
                ctx: *mut TF_OpKernelContext,
                tensor: *mut TF_Tensor,
                value: *mut TF_Tensor,
                Op: ::std::os::raw::c_int,
            ),
        >,
        status: *mut TF_Status,
    );
}
extern "C" {
    pub fn TF_MaybeLockVariableInputMutexesInOrder(
        ctx: *mut TF_OpKernelContext,
        do_lock: bool,
        sparse: bool,
        inputs: *const ::std::os::raw::c_int,
        len: usize,
        copyFunc: ::std::option::Option<
            unsafe extern "C" fn(
                ctx: *mut TF_OpKernelContext,
                source: *mut TF_Tensor,
                dest: *mut TF_Tensor,
            ),
        >,
        lockHolder: *mut *mut TF_VariableInputLockHolder,
        status: *mut TF_Status,
    );
}
extern "C" {
    pub fn TF_GetInputTensorFromVariable(
        ctx: *mut TF_OpKernelContext,
        input: ::std::os::raw::c_int,
        lock_held: bool,
        isVariantType: bool,
        sparse: bool,
        copyFunc: ::std::option::Option<
            unsafe extern "C" fn(
                ctx: *mut TF_OpKernelContext,
                source: *mut TF_Tensor,
                dest: *mut TF_Tensor,
            ),
        >,
        out: *mut *mut TF_Tensor,
        status: *mut TF_Status,
    );
}
extern "C" {
    pub fn TF_OpKernelContext_ForwardRefInputToRefOutput(
        ctx: *mut TF_OpKernelContext,
        input_index: i32,
        output_index: i32,
    );
}
extern "C" {
    pub fn TF_ReleaseVariableInputLockHolder(lockHolder: *mut TF_VariableInputLockHolder);
}
extern "C" {
    pub fn TF_GetInputByName(
        ctx: *mut TF_OpKernelContext,
        inputName: *const ::std::os::raw::c_char,
        tensor: *mut *mut TF_Tensor,
        status: *mut TF_Status,
    );
}
extern "C" {
    pub fn TF_OpKernelConstruction_GetAttrTensorShape(
        ctx: *mut TF_OpKernelConstruction,
        attr_name: *const ::std::os::raw::c_char,
        dims: *mut i64,
        num_dims: usize,
        status: *mut TF_Status,
    );
}
extern "C" {
    pub fn TF_IsRefInput(
        ctx: *mut TF_OpKernelContext,
        i: ::std::os::raw::c_int,
        status: *mut TF_Status,
    ) -> bool;
}
